{"version":3,"sources":["lib.js","index.js"],"names":["attributes","skillAttributes","name","attr","skills","map","x","skillsGovernedBy","filter","newAdvancements","advancements","forEach","skill","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","readStateFromLocalStorage","initialState","tabs","lib","open","setState","assign","tab","JSON","parse","window","localStorage","getItem","setItem","stringify","saveStateToLocalStorage","_this2","advancedBy","info","react_default","a","createElement","key","className","onClick","handleAdvance","totalAdvancements","total","bonus","_this3","getBonusFor","toggleTab","renderSkill","_this4","renderAttributeTab","handleReset","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d9c87c7e.chunk.js","sourcesContent":["\nexport const attributes =\n  [ 'Strength',\n    'Intelligence',\n    'Willpower',\n    'Agility',\n    'Speed',\n    'Endurance',\n    'Personality',\n    'Luck' ]\n\nconst skillAttributes =\n  [ { name: 'Blade', attr: 'Strength' },\n    { name: 'Blunt', attr: 'Strength' },\n    { name: 'Hand-to-Hand', attr: 'Strength' },\n    { name: 'Alchemy', attr: 'Intelligence' },\n    { name: 'Mysticism', attr: 'Intelligence' },\n    { name: 'Conjuration', attr: 'Intelligence' },\n    { name: 'Alteration', attr: 'Willpower' },\n    { name: 'Destruction', attr: 'Willpower' },\n    { name: 'Restoration', attr: 'Willpower' },\n    { name: 'Marksman', attr: 'Agility' },\n    { name: 'Security', attr: 'Agility' },\n    { name: 'Sneak', attr: 'Agility' },\n    { name: 'Acrobatics', attr: 'Speed' },\n    { name: 'Athletics', attr: 'Speed' },\n    { name: 'Light Armor', attr: 'Speed' },\n    { name: 'Armorer', attr: 'Endurance' },\n    { name: 'Block', attr: 'Endurance' },\n    { name: 'Heavy Armor', attr: 'Endurance' },\n    { name: 'Mercantile', attr: 'Personality' },\n    { name: 'Speechcraft', attr: 'Personality' },\n    { name: 'Illusion', attr: 'Personality' } ]\n\nexport const skills = skillAttributes.map((x) => x.name);\n\nexport function getGoverningAttribute(skill) {\n  const x = skillAttributes.find((x) => x.name === skill);\n  return x ? x.attr : null;\n}\n\nexport function skillsGovernedBy(attr) {\n  return skillAttributes\n      .filter((x) => x.attr === attr)\n      .map((x) => x.name);\n}\n\nexport function newAdvancements() {\n  const advancements = {};\n  skills.forEach((skill) => {\n    advancements[skill] = 0;\n  });\n  return advancements;\n}\n\n/* return a new Advancements object with the given skill advanced by 1 */\nexport function advance(advancements, skill) {\n  const newAdvancements = Object.assign({}, advancements)\n  newAdvancements[skill] = advancements[skill] + 1;\n  return newAdvancements;\n}\n\nexport function bonusFromLevels(x) {\n  if (x <= 0) {\n    return 1;\n  } else if (x <= 4) {\n    return 2;\n  } else if (x <= 7) {\n    return 3;\n  } else if (x <= 9) {\n    return 4;\n  } else {\n    return 5;\n  }\n}\n\nexport function attributeBonus(advancements, attr) {\n  let totalAdvancements = 0;\n  skillsGovernedBy(attr).forEach((skill) => {\n    totalAdvancements += advancements[skill];\n  });\n  return {\n    total: totalAdvancements,\n    bonus: bonusFromLevels(totalAdvancements),\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as lib from './lib.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.readStateFromLocalStorage() || this.initialState();\n  }\n\n  initialState() {\n    const tabs = lib.attributes\n      .filter((attr) => attr !== 'Luck')\n      .map((attr) => ({ name: attr, open: true }));\n\n    return {\n      advancements: lib.newAdvancements(),\n      tabs: tabs\n    };\n  }\n\n  handleAdvance(skill) {\n    this.setState((state, props) =>\n      ({ advancements: lib.advance(state.advancements, skill) }));\n  }\n\n  toggleTab(attr) {\n    this.setState((state, props) =>\n      ({ tabs: state.tabs.map((tab) =>\n        tab.name === attr ?\n          { name: attr, open: !tab.open } :\n          tab)}))\n  }\n\n  handleReset() {\n    this.setState({ advancements: lib.newAdvancements() });\n  }\n\n  readStateFromLocalStorage() {\n    return JSON.parse(window.localStorage.getItem('ui-state'));\n  }\n\n  saveStateToLocalStorage() {\n    window.localStorage.setItem('ui-state', JSON.stringify(this.state));\n  }\n\n  componentDidUpdate() {\n    this.saveStateToLocalStorage();\n  }\n\n  renderSkill(skill) {\n    const advancedBy = this.state.advancements[skill];\n    const info = (advancedBy === 0) ? '0' : '+' + advancedBy;\n    return (\n      <li key={skill}>\n        <span className=\"skill-name\">{skill}</span>\n        <span className=\"skill-levels\">{info}</span>\n        <button onClick={() => this.handleAdvance(skill)}>Advance</button>\n      </li>\n    );\n  }\n\n  getBonusFor(attr) {\n    return lib.attributeBonus(this.state.advancements, attr);\n  }\n\n  renderAttributeTab(tab) {\n    const attr = tab.name;\n    const bonus = this.getBonusFor(attr);\n    return (\n      <li key={\"attr-\" + attr} className={'attr tab-' + (tab.open ? 'open' : 'closed')}>\n        <div className=\"attr-header\" onClick={() => this.toggleTab(tab.name)}>\n          <span className=\"attr-name\">{attr}</span>\n          { tab.open ? <span className=\"attr-bonus\">+{bonus.bonus}</span> : null}\n          <span className=\"expand-arrow\">{ tab.open ? '△' : '▽' }</span>\n        </div>\n        { tab.open ?\n          <div className=\"attr-body\">\n            <ul className=\"skills\">\n              {lib.skillsGovernedBy(attr).map((skill) => this.renderSkill(skill))}\n            </ul>\n          </div> :\n          null\n        }\n      </li>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Oblivion leveling helper</h1>\n        <ul className=\"attributes\">\n          {this.state.tabs.map((tab) => this.renderAttributeTab(tab))}\n        </ul>\n        <div className=\"extra-controls\">\n          <button onClick={() => this.handleReset()}>Reset</button>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}